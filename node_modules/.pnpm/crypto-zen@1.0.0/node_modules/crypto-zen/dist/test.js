var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key2 of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key2) && key2 !== except)
        __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));

// src/index.ts
var import_crypto_js = __toESM(require("crypto-js"));
function encrypt(message2, key2) {
  return import_crypto_js.default.AES.encrypt(message2, key2).toString();
}
function decrypt(message2, key2) {
  return import_crypto_js.default.AES.decrypt(message2, key2).toString(import_crypto_js.default.enc.Utf8);
}

// src/test.ts
var message = "this is a message";
var key = "the key";
var encrypted = encrypt(message, key);
console.log(encrypted);
console.log(decrypt(encrypted, key));
